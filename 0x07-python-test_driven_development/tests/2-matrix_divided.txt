The ``2-matrix_divided`` module
===============================

Using ``matrix_divided``
-------------------------------

This is a 2-matrix_divided text file in reStructuredText format.
First import ``matrix_divided`` from ``2-matrix_divided`` module:
	>>> import sys
	>>> sys.path.append('..')
	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided 	

Now use it:
	# Valid Test Case 
	>>> matrix_divided([[1, 2], [3, 4]], 2)
	[[0.5, 1.0], [1.5, 2.0]]

	>>> matrix_divided([[1, 2], [3, 4]], 1)
	[[1.0, 2.0], [3.0, 4.0]]

	>>> matrix_divided([[1, 2], [3, 4]], -10)
        [[-0.1, -0.2], [-0.3, -0.4]]
	
	# Invalid Test Case
	>>> matrix_divided("School", 56)
	Traceback (most recent call last):
		...
	TypeError: matrix must be a matrix (list of lists) of integers/floats
	
	>>> matrix_divided([[1, 2], [3, 4]], "School")
        Traceback (most recent call last):
                ...
        TypeError: div must be a number
	
	>>> matrix_divided([[1, 2], [3]], 3)
        Traceback (most recent call last):
                ...
        TypeError: Each row of the matrix must have the same size

	# Wrong Test Case
	>>> matrix_divided(2, 2)
	Traceback (most recent call last):
                ...
        TypeError: matrix must be a matrix (list of lists) of integers/floats

	# Blank Test Case
	>>> matrix_divided([],2)
	[]
	
	>>> matrix_divided([[1, 2], [3, 4]],)
        Traceback (most recent call last):
                ...
        TypeError: matrix_divided() missing 1 required positional argument: 'div'

