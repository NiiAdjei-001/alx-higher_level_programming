The ``3-say_my_name`` module
===============================

Using ``say_my_name``
-------------------------------

This is a 3-say_my_name text file in reStructuredText format.
First import ``say_my_name`` from ``3-say_my_name`` module:
	>>> import sys
	>>> sys.path.append('..')
	>>> say_my_name = __import__('3-say_my_name').say_my_name

Now use it:
   # Valid Test Case
	>>> say_my_name("John", "Doe")
	My name is John Doe

   # Boundary Test Case

   # Invalid Test Case
	>>> say_my_name(-2, "Doe")
	Traceback (most recent call last):
		...
	TypeError: first_name must be a string

	>>> say_my_name("John", -2)
        Traceback (most recent call last):
                ...
        TypeError: last_name must be a string

   # Wrong Test Case
	>>> say_my_name(["Gate"],"")
	Traceback (most recent call last):
		...
	TypeError: first_name must be a string

   # Blank Test Case
	>>> say_my_name("","Doe")
	My name is  Doe

	>>> say_my_name("John","")
        My name is John 

	>>> say_my_name()
	Traceback (most recent call last):
		...
	TypeError: say_my_name() missing 1 required positional argument: 'first_name'

